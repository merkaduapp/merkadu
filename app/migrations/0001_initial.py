# Generated by Django 4.2.9 on 2024-02-04 14:52

import app.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('merkadu_tax', models.FloatField(null=True, verbose_name='taxa do merkadu')),
                ('delivery_fee_percent', models.IntegerField(blank=True, null=True, verbose_name='percentual da taxa de entrega')),
                ('pix_cost_percent', models.FloatField(null=True, verbose_name='porcentagem de custo com o pix')),
            ],
            options={
                'verbose_name': 'configuração',
                'verbose_name_plural': 'configuração',
                'db_table': 'base_configuration',
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='nome do estabelecimento')),
                ('cnpj', models.CharField(max_length=14, null=True, verbose_name='cnpj')),
                ('bank', models.CharField(max_length=250, null=True, verbose_name='banco')),
                ('bank_account', models.CharField(max_length=250, null=True, verbose_name='conta do banco')),
                ('bank_agency', models.CharField(max_length=250, null=True, verbose_name='agência do banco')),
                ('pix', models.CharField(max_length=250, null=True, verbose_name='pix')),
                ('delivery_fee', models.FloatField(null=True, verbose_name='taxa de entrega')),
                ('delivery_time', models.FloatField(null=True, verbose_name='tempo de entrega (hs)')),
                ('min_order_value', models.FloatField(null=True, verbose_name='valor mínimo do pedido')),
                ('phone_number', models.CharField(max_length=18, verbose_name='telefone')),
                ('adress_street', models.CharField(max_length=250, null=True, verbose_name='rua')),
                ('adress_number', models.IntegerField(null=True, verbose_name='numero')),
                ('adress_district', models.CharField(max_length=250, null=True, verbose_name='bairro')),
                ('city', models.CharField(max_length=250, null=True, verbose_name='cidade')),
                ('state', models.CharField(max_length=250, null=True, verbose_name='estado')),
                ('latitude', models.CharField(max_length=250, null=True, verbose_name='latitude')),
                ('longitude', models.CharField(max_length=250, null=True, verbose_name='longitude')),
                ('logotipo', models.ImageField(max_length=250, upload_to='media/', verbose_name='logomarca')),
                ('is_active', models.BooleanField(default=False, verbose_name='ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='atualizado em ')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parceiro', to=settings.AUTH_USER_MODEL, verbose_name='parceiro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'mercado',
                'verbose_name_plural': 'mercados',
                'db_table': 'market',
            },
        ),
        migrations.CreateModel(
            name='ProdutoCatalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('drinks', 'Bebidas'), ('grocery_store', 'Mercearia'), ('cleaning_products', 'Produtos de Limpeza'), ('personal_hygiene', 'Higiene Pessoal'), ('medicines', 'Medicamentos')], max_length=50, verbose_name='categoria')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.FileField(blank=True, null=True, upload_to='imagens_catalogo/')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='nome')),
                ('descript', models.CharField(max_length=250, verbose_name='descrição')),
                ('value', models.FloatField(verbose_name='valor')),
                ('offer_value', models.FloatField(verbose_name='valor de oferta')),
                ('quantity_in_stock', models.IntegerField(verbose_name='quantidade em estoque')),
                ('category', models.CharField(choices=[('drinks', 'Bebidas'), ('grocery_store', 'Mercearia'), ('cleaning_products', 'Produtos de Limpeza'), ('personal_hygiene', 'Higiene Pessoal'), ('medicines', 'Medicamentos')], max_length=50, verbose_name='categoria')),
                ('image', models.FileField(blank=True, null=True, upload_to='product_images/', validators=[app.models.validate_webp_extension])),
                ('is_active', models.BooleanField(default=True, verbose_name='ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='atualizado em ')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market', to='app.market', verbose_name='mercado')),
                ('produto_catalogo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.produtocatalogo')),
            ],
            options={
                'verbose_name': 'produto',
                'verbose_name_plural': 'produtos',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=100, null=True, verbose_name='client_name')),
                ('client_cpf', models.CharField(max_length=100, null=True, verbose_name='cpf')),
                ('client_phone', models.CharField(max_length=100, null=True, verbose_name='phone')),
                ('address_number', models.CharField(max_length=100, null=True, verbose_name='número')),
                ('address_street', models.CharField(max_length=100, null=True, verbose_name='rua')),
                ('address_district', models.CharField(max_length=100, null=True, verbose_name='bairro')),
                ('total', models.FloatField(null=True, verbose_name='total')),
                ('merkadu_tax', models.FloatField(null=True, verbose_name='taxa do merkadu')),
                ('delivery_fee_percent', models.FloatField(null=True, verbose_name='percentual da taxa de entrega para o merkadu')),
                ('pix_cost_percent', models.FloatField(null=True, verbose_name='porcentagem de custo com o pix no pedido')),
                ('delivery_fee', models.FloatField(null=True, verbose_name='taxa de entrega')),
                ('pix_cost', models.FloatField(null=True, verbose_name='custo com o pix no pedido')),
                ('market_receivable', models.FloatField(null=True, verbose_name='recebível do mercado')),
                ('merkadu_receivable', models.FloatField(null=True, verbose_name='recebível do merkadu')),
                ('products', models.JSONField()),
                ('status', models.CharField(default='Pendente', max_length=50, verbose_name='status')),
                ('market_payed', models.BooleanField(default=False, null=True, verbose_name='o supermercado já foi pago por esse pedido?')),
                ('finalized_at', models.DateTimeField(null=True, verbose_name='finalizado em ')),
                ('is_active', models.BooleanField(default=True, verbose_name='ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='atualizado em ')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='cliente')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.market', verbose_name='mercado')),
            ],
            options={
                'verbose_name': 'pedido',
                'verbose_name_plural': 'pedidos',
                'db_table': 'order',
            },
        ),
    ]
